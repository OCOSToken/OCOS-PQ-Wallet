"""
generator.py
============

OCOS Post-Quantum Wallet Generator.

This module generates a quantum-resistant wallet using the
NIST-approved CRYSTALS-Dilithium3 digital signature scheme.

It provides:
- Keypair generation (private/public)
- OCOS address derivation using SHA3-256 + Base58Check
- Public key hash extraction
- Optional address verification

Author: OCOSToken Team
License: MIT
"""

from pqcrypto.sign import dilithium3
import hashlib
import base58


def generate_wallet():
    """
    Generates a Dilithium3-based keypair and derives the OCOS address.

    Returns:
        dict: {
            "private_key": hex-encoded string,
            "public_key": hex-encoded string,
            "address": OCOS PQ address (Base58Check)
        }
    """
    # 1. Generate quantum-safe keypair
    public_key, private_key = dilithium3.generate_keypair()

    # 2. Derive address from public key hash
    pubkey_hash = hashlib.sha3_256(public_key).digest()
    address_bytes = pubkey_hash[:20]  # 160-bit address
    address = "QOS" + base58.b58encode_check(address_bytes).decode()

    return {
        "private_key": private_key.hex(),
        "public_key": public_key.hex(),
        "address": address
    }


def get_public_key_hash(public_key: bytes) -> str:
    """
    Returns the SHA3-256 hash of the public key (hex encoded).

    Args:
        public_key (bytes): Public key generated by Dilithium3.

    Returns:
        str: Hex-encoded SHA3-256 digest.
    """
    digest = hashlib.sha3_256(public_key).hexdigest()
    return digest


def verify_address(public_key: bytes, address: str) -> bool:
    """
    Verifies whether a given address corresponds to a given public key.

    Args:
        public_key (bytes): The public key.
        address (str): OCOS address to verify.

    Returns:
        bool: True if the address matches the public key, False otherwise.
    """
    pubkey_hash = hashlib.sha3_256(public_key).digest()
    expected_address = "QOS" + base58.b58encode_check(pubkey_hash[:20]).decode()
    return expected_address == address
